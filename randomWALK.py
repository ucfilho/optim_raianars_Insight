# -*- coding: utf-8 -*-
"""randomWALK.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15PEY4WtS5MvoO7ZVI9p5Jj9JIMxDG8ta
"""

def randomWALK(fobj,best,fbest,popsize,tunePAR,MAX,MIN,X):

  def checkRES(FES,maxFES):
    if(FES < maxFES ):
      flag = True
    else:
      flag = False
    return flag

  cont = 0
  dim = len(X[0,:])
  flag = checkRES(FES,maxFES)

  while(flag):
    FES = FES+1
    trial = np.copy(X[cont,:])
    cont = cont + 1
    tunePAR = [maxPAR,minPAR,maxFES,FES,gen]
    flag = checkRES(FES,maxFES)
    for j in range(dim):
      stdWALK = 0.5*(minPAR/(minPAR+cont))**2*np.random.rand()*best[j]
      afterWALK = np.random.normal(best[j] ,stdWALK )
      if(afterWALK > MAX[j]): afterWALK = MAX[j]
      if(afterWALK < MIN[j]): afterWALK = MIN[j]
      trial[j] = afterWALK
    f = fobj[trial]
    if(f < fbest): 
      X[cont-1,:] = trial
      fbest = f
      best = trial
    if (cont > popsize): cont = 0
  # tunePAR = [maxPAR,minPAR,maxFES,FES,gen]
  return FES,X,best,fbest